# Generated by Django 4.0.3 on 2022-05-15 21:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('account_type', models.CharField(choices=[('SU', 'Supervisor'), ('IN', 'Instructor'), ('TA', 'TA')], default='TA', max_length=2)),
                ('phone_number', models.CharField(blank=True, max_length=13)),
                ('state', models.CharField(blank=True, max_length=2)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('address_line1', models.CharField(blank=True, max_length=50)),
                ('address_line2', models.CharField(blank=True, max_length=50)),
                ('zipcode', models.CharField(blank=True, max_length=9)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['account_type'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('name', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('term', models.CharField(blank=True, max_length=20, null=True)),
                ('dpt', models.CharField(max_length=20)),
                ('num', models.CharField(max_length=10)),
                ('users', models.ManyToManyField(related_name='users-courses+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('users', models.ManyToManyField(related_name='skills', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_number', models.CharField(max_length=3)),
                ('section_type', models.CharField(choices=[('LAB', 'Lab'), ('LEC', 'Lecture')], default='LEC', max_length=3)),
                ('meeting_start', models.TimeField(null=True)),
                ('meeting_end', models.TimeField(null=True)),
                ('meeting_days', models.CharField(choices=[('M', 'Monday'), ('T', 'Tuesday'), ('W', 'Wednesday'), ('R', 'Thursday'), ('F', 'Friday'), ('MW', 'Monday and Wednesday'), ('TR', 'Tuesday and Thursday')], default='MW', max_length=2)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduler_app.course')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-section_type', 'section_number'],
            },
        ),
    ]
